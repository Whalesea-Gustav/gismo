""""
    @file Pythonizations for cppyy bindings

    @brief Improves the usability of the Python bindings

    This file is part of the G+Smo library.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.

    Author(s): F. Scholz
"""

# Pythonizations for the gismo namespace
def pythonize_gismo(klass, name):
    # Enable conversion to numpy
    if name.startswith("gsMatrix<double"):
        def tonumpy(self):
            import numpy as np
            rows = self.rows()
            cols = self.cols()
            arr = self.data()
            arr.reshape((rows * cols, ))
            numpyarray = np.frombuffer(arr, dtype=np.double, count=rows*cols).reshape(cols, rows).transpose()
            return numpyarray
        setattr(klass, "tonumpy", tonumpy)

        # Constructor from numpy array
        @classmethod
        def fromnumpy(cls, numpyarray):
            import numpy as np
            if not numpyarray.ndim == 2:
                raise TypeError("Input needs to be a two-dimensional numpy array.")
            if not numpyarray.dtype == np.double:
                raise TypeError("Data type needs to be double.")
            return cls(numpyarray, numpyarray.shape[0], numpyarray.shape[1])
        setattr(klass, "fromnumpy", fromnumpy)

    # Add length as len
    try:
        klass.__len__ = klass.__dict__['size']
    except KeyError:
        pass
